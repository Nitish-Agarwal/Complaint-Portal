package com.orangecoders.nitish.iitdcomplaintportal;

import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.ExpandableListView;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.Request;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONException;
import org.json.JSONObject;
import org.w3c.dom.Text;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class prob_sta_votes extends AppCompatActivity implements View.OnClickListener {
    private String sr;
    private String desc;
    private String date;
    private String status;
    private String tablename,username;
    private String url,url1,url3;
    //final String[] mess ={""};
    Button b,up,dw;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_prob_sta_votes);
        Intent intent = getIntent();
        username = intent.getExtras().getString("user");
        tablename = intent.getExtras().getString("tablename");
        sr = intent.getExtras().getString("id");
        desc = intent.getExtras().getString("complaint");
        date = intent.getExtras().getString("date");
        status = intent.getExtras().getString("status");
        TextView t = (TextView) findViewById(R.id.Co_ID);
        t.setText("Complaint ID : " + sr);
        TextView t1 = (TextView) findViewById(R.id.ComplaintDescription);
        t1.setText("Complaint Description : " + desc);
        TextView t2 = (TextView) findViewById(R.id.date);
        t2.setText("Complaint Date and Time : " + date);
        b = (Button) findViewById(R.id.resolved);
        up =(Button) findViewById(R.id.upvotes);
        dw =(Button) findViewById(R.id.downvotes);
        b.setOnClickListener(this);
        up.setOnClickListener(this);
        dw.setOnClickListener(this);

    }
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.aboutus) {
            Intent intent = new Intent(getApplicationContext(), Aboutus.class);
            startActivity(intent);
            return true;
        }
        if (id == R.id.logout) {
            Intent intent = new Intent(getApplicationContext(), MainActivity.class);
            startActivity(intent);
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
    public void upvote (){
        url1 = "http://10.192.10.186/project/check_votes.php?userna=" + username + "&id=" + sr + "&tablename=" + tablename;
        url = "http://10.192.10.186/project/upvotes.php?id=" + sr + "&tablename=" + tablename;
        StringRequest stringRequest = new StringRequest(Request.Method.GET, url1,
                new Response.Listener<String>() {
                    @Override
                    public void onResponse(String response) {
                        // Result handling
                        try {
                            JSONObject repose = new JSONObject(response);
                            final String mess = repose.getString("result");
                             if (mess.equals("voting_allowed")){
                                 insert();
        StringRequest stringRequest1 = new StringRequest(Request.Method.GET, url,
                new Response.Listener<String>() {
                    @Override
                    public void onResponse(String response) {
                        // Result handling
                        try {
                            JSONObject repose = new JSONObject(response);
                            //mess = repose.getString("result");
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {

                // Error handling
                Toast.makeText(prob_sta_votes.this, error.toString(), Toast.LENGTH_LONG).show();
                error.printStackTrace();
            }
        });
// Add the request to the queue
        Volley.newRequestQueue(getApplicationContext()).add(stringRequest1);
        finish();
    }else{
        Toast.makeText(prob_sta_votes.this,"YOU ALREADY VOTED", Toast.LENGTH_SHORT).show();
    }
            finish();
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {

                // Error handling
                Toast.makeText(prob_sta_votes.this, error.toString(), Toast.LENGTH_LONG).show();
                error.printStackTrace();
            }

        }

        );
// Add the request to the queue
        Volley.newRequestQueue(this).add(stringRequest);
        finish();
    }


    public void downvote(){
        url1 = "http://10.192.10.186/project/check_votes.php?userna=" + username + "&id=" + sr + "&tablename=" + tablename;
        url3= "http://10.192.10.186/project/downvotes.php?id=" + sr + "&tablename=" + tablename;
        StringRequest stringRequest = new StringRequest(Request.Method.GET, url1,
                new Response.Listener<String>() {
                    @Override
                    public void onResponse(String response) {
                        // Result handling
                        try {
                            JSONObject repose = new JSONObject(response);
                         final String mess = repose.getString("result");
                            if (mess.equals("voting_allowed")){
                                insert();
                                StringRequest stringRequest1 = new StringRequest(Request.Method.GET, url3,
                                        new Response.Listener<String>() {
                                            @Override
                                            public void onResponse(String response) {
                                                // Result handling
                                                try {
                                                    JSONObject repose = new JSONObject(response);
                                                    //mess = repose.getString("result");
                                                } catch (JSONException e) {
                                                    e.printStackTrace();
                                                }
                                            }
                                        }, new Response.ErrorListener() {
                                    @Override
                                    public void onErrorResponse(VolleyError error) {

                                        // Error handling
                                        Toast.makeText(prob_sta_votes.this, error.toString(), Toast.LENGTH_LONG).show();
                                        error.printStackTrace();
                                    }
                                });
// Add the request to the queue
                                Volley.newRequestQueue(getApplicationContext()).add(stringRequest1);
                        }else{
                                Toast.makeText(prob_sta_votes.this,"YOU ALREADY VOTED", Toast.LENGTH_SHORT).show();
                            }
                            finish();
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {

                // Error handling
                Toast.makeText(prob_sta_votes.this, error.toString(), Toast.LENGTH_LONG).show();
                error.printStackTrace();
            }

        }

        );
// Add the request to the queue
        Volley.newRequestQueue(this).add(stringRequest);
        finish();
    }


    public void sta_chan (){
        if (status.equals("UNSOLVED")) {
            url = "http://10.192.10.186/project/status_change.php?id=" + sr + "&tablename=" + tablename;
            StringRequest stringRequest = new StringRequest(Request.Method.GET, url,
                    new Response.Listener<String>() {
                        @Override
                        public void onResponse(String response) {
                            // Result handling
                            try {
                                JSONObject repose = new JSONObject(response);
                            } catch (JSONException e) {
                                e.printStackTrace();
                            }
                        }
                    }, new Response.ErrorListener() {
                @Override
                public void onErrorResponse(VolleyError error) {

                    // Error handling
                    Toast.makeText(prob_sta_votes.this, error.toString(), Toast.LENGTH_LONG).show();
                    error.printStackTrace();
                }
            });
// Add the request to the queue
            Volley.newRequestQueue(this).add(stringRequest);
            finish();
        }
        else {
            Toast.makeText(prob_sta_votes.this,"PROBLEM ALREADY SOLVED", Toast.LENGTH_LONG).show();
        }
    }

    @Override
    public void onClick(View v) {
        if (v == b){
            sta_chan();
        }
        if (v == up){
            upvote();
        }
        if (v == dw){
            downvote();
        }
    }

    public void insert(){
        String ur = "http://10.192.10.186/project/insert.php?id=" + sr + "&tablename=" + tablename +"&username=" + username;
        StringRequest stringRequest = new StringRequest(Request.Method.GET, ur,
                new Response.Listener<String>() {
                    @Override
                    public void onResponse(String response) {
                        // Result handling
                        try {
                            JSONObject repose = new JSONObject(response);
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {

                // Error handling
                Toast.makeText(prob_sta_votes.this, error.toString(), Toast.LENGTH_LONG).show();
                error.printStackTrace();
            }
        });
// Add the request to the queue
        Volley.newRequestQueue(this).add(stringRequest);
        finish();
    }
}


